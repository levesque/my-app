{"version":3,"sources":["index.js"],"names":["FilterableProductTable","props","state","rawData","filterText","inStockOnly","handleOnFilterChange","bind","handleCheckChanged","this","setState","checked","SearchBar","onFilterChange","onCheckChange","ProductTable","React","Component","handleFilterChange","handleCheckChange","e","target","value","type","placeholder","onChange","previousCategory","rows","forEach","product","name","includes","stocked","category","push","ProductCategoryRow","ProductRow","className","colSpan","price","ReactDOM","render","document","getElementById"],"mappings":"wNAKMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,EAAKF,MAAME,QACpBC,WAAY,GACZC,aAAa,GAEjB,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBARX,E,wDAWnB,SAAqBH,GACjBK,KAAKC,SAAS,CAAEN,WAAYA,M,gCAGhC,SAAmBO,GACfF,KAAKC,SAAS,CAACL,YAAaM,M,oBAGhC,WACI,OACI,gCACI,cAACC,EAAD,CAAWR,WAAYK,KAAKP,MAAME,WAAYS,eAAgBJ,KAAKH,qBAAsBD,YAAaI,KAAKP,MAAMG,YAAaS,cAAeL,KAAKD,qBAClJ,cAACO,EAAD,CAAcZ,QAASM,KAAKP,MAAMC,QAASC,WAAYK,KAAKP,MAAME,WAAYC,YAAaI,KAAKP,MAAMG,qB,GAxBjFW,IAAMC,WA8BrCL,E,kDACF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDiB,mBAAqB,EAAKA,mBAAmBX,KAAxB,gBAC1B,EAAKY,kBAAoB,EAAKA,kBAAkBZ,KAAvB,gBAHV,E,sDAMnB,SAAmBa,GACfX,KAAKR,MAAMY,eAAeO,EAAEC,OAAOC,S,+BAGvC,SAAkBF,GACdX,KAAKR,MAAMa,cAAcM,EAAEC,OAAOV,W,oBAGtC,SAAOV,GACH,OACI,gCACI,uBACIsB,KAAK,OACLD,MAAOb,KAAKR,MAAMG,WAClBoB,YAAY,YACZC,SAAUhB,KAAKS,qBAEnB,uBACA,uBAAOK,KAAK,WAAWZ,QAASF,KAAKR,MAAMI,YAAaoB,SAAUhB,KAAKU,oBAR3E,sC,GAjBYH,IAAMC,WA+BxBF,E,4JACF,SAAOd,GAAQ,IAEPyB,EAFM,OACJC,EAAO,GAkBb,OAfAlB,KAAKR,MAAME,QAAQyB,SAAQ,SAAAC,IACnBA,EAAQC,KAAKC,SAAS,EAAK9B,MAAMG,aAAgB,EAAKH,MAAMI,cAAcwB,EAAQG,UAC9EH,EAAQI,WAAaP,IACrBC,EAAKO,KACD,cAACC,EAAD,CAAoBF,SAAUJ,EAAQI,UAAeJ,EAAQI,WAEjEP,EAAmBG,EAAQI,UAE/BN,EAAKO,KACD,cAACE,EAAD,CAAYP,QAASA,GAAcA,EAAQC,WAOnD,8BACI,kCACI,gCACI,+BACI,sCACA,4CAGR,gCACKH,a,GA9BEX,IAAMC,WAsC3BkB,E,4JACF,SAAOlC,GACH,OACI,oBAAIoC,UAAU,qBAAd,SACI,oBAAIC,QAAQ,IAAZ,SAAiB7B,KAAKR,MAAMgC,iB,GAJXjB,IAAMC,WAUjCmB,E,4JACF,SAAOnC,GACH,OACI,+BACI,oBAAIoC,UAAY5B,KAAKR,MAAM4B,QAAQG,QAAU,GAAK,aAAlD,SAAkEvB,KAAKR,MAAM4B,QAAQC,OACrF,6BAAKrB,KAAKR,MAAM4B,QAAQU,e,GALfvB,IAAMC,WAoB/BuB,IAASC,OACL,cAACzC,EAAD,CAAwBG,QAVZ,CACZ,CAAE8B,SAAU,iBAAkBM,MAAO,SAAUP,SAAS,EAAMF,KAAM,YACpE,CAAEG,SAAU,iBAAkBM,MAAO,QAASP,SAAS,EAAMF,KAAM,YACnE,CAAEG,SAAU,iBAAkBM,MAAO,SAAUP,SAAS,EAAOF,KAAM,cACrE,CAAEG,SAAU,cAAeM,MAAO,SAAUP,SAAS,EAAMF,KAAM,cACjE,CAAEG,SAAU,cAAeM,MAAO,UAAWP,SAAS,EAAOF,KAAM,YACnE,CAAEG,SAAU,cAAeM,MAAO,UAAWP,SAAS,EAAMF,KAAM,cAKlEY,SAASC,eAAe,W","file":"static/js/main.f0d67100.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nclass FilterableProductTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rawData: this.props.rawData,\r\n            filterText: \"\",\r\n            inStockOnly: false,\r\n        };\r\n        this.handleOnFilterChange = this.handleOnFilterChange.bind(this);\r\n        this.handleCheckChanged = this.handleCheckChanged.bind(this);\r\n    }\r\n\r\n    handleOnFilterChange(filterText) {\r\n        this.setState({ filterText: filterText });\r\n    }\r\n\r\n    handleCheckChanged(checked){\r\n        this.setState({inStockOnly: checked});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchBar filterText={this.state.filterText} onFilterChange={this.handleOnFilterChange} inStockOnly={this.state.inStockOnly} onCheckChange={this.handleCheckChanged}/>\r\n                <ProductTable rawData={this.state.rawData} filterText={this.state.filterText} inStockOnly={this.state.inStockOnly} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFilterChange = this.handleFilterChange.bind(this);\r\n        this.handleCheckChange = this.handleCheckChange.bind(this);\r\n    }\r\n\r\n    handleFilterChange(e) {\r\n        this.props.onFilterChange(e.target.value);\r\n    }\r\n\r\n    handleCheckChange(e) {\r\n        this.props.onCheckChange(e.target.checked);\r\n    }\r\n\r\n    render(props) {\r\n        return (\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.props.filterText}\r\n                    placeholder=\"Search...\"\r\n                    onChange={this.handleFilterChange}\r\n                />\r\n                <br />\r\n                <input type=\"checkbox\" checked={this.props.inStockOnly} onChange={this.handleCheckChange}/> Only show products in stock\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProductTable extends React.Component {\r\n    render(props) {\r\n        const rows = [];\r\n        let previousCategory;\r\n\r\n        this.props.rawData.forEach(product => {\r\n            if (product.name.includes(this.props.filterText) && (this.props.inStockOnly ? product.stocked : true)) {\r\n                if (product.category !== previousCategory) {\r\n                    rows.push(\r\n                        <ProductCategoryRow category={product.category} key={product.category} />\r\n                    );\r\n                    previousCategory = product.category;\r\n                }\r\n                rows.push(\r\n                    <ProductRow product={product} key={product.name} />\r\n                );\r\n            }\r\n        }\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProductCategoryRow extends React.Component {\r\n    render(props) {\r\n        return (\r\n            <tr className=\"ProductCategoryRow\">\r\n                <td colSpan=\"2\">{this.props.category}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProductRow extends React.Component {\r\n    render(props) {\r\n        return (\r\n            <tr>\r\n                <td className={(this.props.product.stocked ? \"\" : \"OutOfStock\")}>{this.props.product.name}</td>\r\n                <td>{this.props.product.price}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nconst RAWDATA = [\r\n    { category: \"Sporting Goods\", price: \"$49.99\", stocked: true, name: \"Football\" },\r\n    { category: \"Sporting Goods\", price: \"$9.99\", stocked: true, name: \"Baseball\" },\r\n    { category: \"Sporting Goods\", price: \"$29.99\", stocked: false, name: \"Basketball\" },\r\n    { category: \"Electronics\", price: \"$99.99\", stocked: true, name: \"iPod Touch\" },\r\n    { category: \"Electronics\", price: \"$399.99\", stocked: false, name: \"iPhone 5\" },\r\n    { category: \"Electronics\", price: \"$199.99\", stocked: true, name: \"Nexus 7\" }\r\n];\r\n\r\nReactDOM.render(\r\n    <FilterableProductTable rawData={RAWDATA} />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}